# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html
#
# This is a data set used by the "Hello World" example pipeline provided with the project
# template. Please feel free to remove it once you remove the example pipeline.

example_iris_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/iris.csv

raw_mobility_report:
  type: pandas.CSVDataSet
  filepath: data/01_raw/Global_Mobility_Report.csv
  layer: raw

clean_wig_data:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/wgidataset.csv
  layer: intermediate

covid_19_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/covid_19_data.csv
  layer: raw

covid_19_data_cases_deaths:
  type: pandas.CSVDataSet
  filepath: data/02_raw/covid_19_data.csv
  layer: intermediate

hospital_beds_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/API_SH.MED.BEDS.ZS_DS2_en_csv_v2_1346721.csv
  layer: raw
  load_args:
    skiprows: 3

specialist_doctors_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/API_SH.MED.SAOP.P5_DS2_en_csv_v2_1345400.csv
  layer: raw
  load_args:
    skiprows: 3

health_workers_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/API_SH.MED.CMHW.P3_DS2_en_csv_v2_1351263.csv
  layer: raw
  load_args:
    skiprows: 3

physicians_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/API_SH.MED.PHYS.ZS_DS2_en_csv_v2_1348462.csv
  layer: raw
  load_args:
    skiprows: 3

handwashing_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/API_SH.STA.HYGN.ZS_DS2_en_csv_v2_1351290.csv
  layer: raw
  load_args:
    skiprows: 3

glbl_population_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/API_SP.POP.TOTL_DS2_en_csv_v2_1345178.csv
  layer: raw
  load_args:
    skiprows: 3

health_system:
  type: pandas.CSVDataSet
  filepath: data/01_raw/2.12_Health_systems.csv
  layer: raw

WB_data_full:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/WB_data_full.csv
  layer: intermediate


WB_health_cases:
  type: pandas.CSVDataSet
  filepath: data/03_primary/WB_health_cases.csv
  layer: primary


clean_example_iris_data:
  type: pandas.CSVDataSet
  filepath: data/03_primary/iris.csv
  layer: primary

exp_wig_data:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/exp_wgidataset.csv
  layer: intermediate

cleaned_health_factors:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/health_factors.csv
  layer: intermediate

raw_excess_deaths:
  type: pandas.CSVDataSet
  filepath: data/01_raw/all_weekly_excess_deaths.csv.txt
  layer: raw

cleaned_excess_deaths:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/cleaned_excess_deaths.csv
  layer: intermediate

agg_cleaned_excess_deaths:
  type: pandas.CSVDataSet
  filepath: data/03_primary/agg_cleaned_excess_deaths.csv

merged_data_wig_excess:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/merged_wig_excess.csv
  # versioned: True
  layer: model_input

wigi_linear_model:
  type: pickle.PickleDataSet
  filepath: data/06_models/wigi_linear_model.pkl
  layer: models


wigi_linear_model_summary_output:
  type: text.TextDataSet
  filepath: data/08_reporting/wigi_linear_model_summary_output.txt
  versioned: True
  layer: reporting

wigi_linear_model_qqplot:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/wigi_linear_model_qqplot.png
  versioned: True
  layer: reporting

wigi_linear_model_reg_fit:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/wigi_linear_model_reg_fit.png
  versioned: True
  layer: reporting

preds:
  type: pandas.CSVDataSet
  filepath: data/07_model_output/predictions.csv
  save_args:
    index: False


